swagger: "2.0"
info:
  description: API definitions for Mahakam Cloud Platform
  title: Mahakam API
  version: 1.0.0
consumes:
- application/json
produces:
- application/json
schemes:
- http
basePath: /v1
paths:
  /apps:
    get:
      tags:
        - apps
      operationId: getApps
      responses:
        200:
          description: list created applications
          schema:
            type: array
            items:
              $ref: "#/definitions/app"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    post:
      tags:
        - apps
      operationId: createApp
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/app"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/app"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /apps/values:
    post:
      tags:
        - apps
      operationId: uploadAppValues
      consumes:
      - multipart/form-data
      parameters:
        - name: values
          in: formData
          description: App values.yaml to upload
          type: file
        - name: appName
          in: formData
          description: App name
          type: string
        - name: owner
          in: formData
          description: Owner of the app
          type: string
        - name: clusterName
          in: formData
          description: Cluster name to deploy app
          type: string
      responses:
        201:
          description: App values added
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /bare-metal-hosts:
    post:
      tags:
        - bare-metal-hosts
      operationId: registerBareMetalHost
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/bareMetalHost"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/bareMetalHost"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
    get:
      tags:
        - bare-metal-hosts
      operationId: getBareMetalHosts
      responses:
        200:
          description: list of available bare metal hosts
          schema:
            type: array
            items:
              $ref: "#/definitions/bareMetalHost"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /clusters:
    get:
      tags:
        - clusters
      operationId: getClusters
      parameters:
        - in: query
          type: string
          name: owner
          description: Owner of clusters
      responses:
        200:
          description: list available clusters
          schema:
            type: array
            items:
              $ref: "#/definitions/cluster"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    post:
      tags:
        - clusters
      operationId: createCluster
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/cluster"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/cluster"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /clusters/describe:
    get:
      tags:
        - clusters
      operationId: describeClusters
      parameters:
        - in: query
          type: string
          name: name
          description: Cluster name
      responses:
        200:
          description: describe single cluster
          schema:
            $ref: "#/definitions/cluster"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /clusters/validate:
    post:
      tags:
        - clusters
      operationId: validateCluster
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/cluster"
      responses:
        201:
          description: Validated
          schema:
            $ref: "#/definitions/cluster"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /networks:
    get:
      tags:
        - networks
      operationId: getNetworks
      responses:
        200:
          description: list created networks
          schema:
            type: array
            items:
              $ref: "#/definitions/network"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
    post:
      tags:
        - networks
      operationId: createNetwork
      parameters:
        - name: body
          in: body
          schema:
            $ref: "#/definitions/network"
      responses:
        201:
          description: Created
          schema:
            $ref: "#/definitions/network"
        default:
          description: error
          schema:
            $ref: "#/definitions/error"
  /networks/pools/ipPools:
    post:
      tags:
        - networks
      operationId: createIpPool
      parameters:
        - name: ipPool
          in: body
          schema:
            $ref: "#/definitions/ipPool"   
      responses:
        201:
          description: Created new ip pool
          schema:
            $ref: "#/definitions/ipPool"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
  /networks/pools/ipPools/{poolId}:
    post:
      tags:
        - networks
      operationId: allocateOrReleaseFromIpPool
      parameters:
        - name: poolId
          in: path
          type: string
        - name: allocatedIP
          in: body
          type: string
        - name: releasedIP
          in: query
          type: string
        - name: action
          enum:
          - ALLOCATE
          - RELEASE
          in: query
          type: string
      responses:
        201:
          description: Allocated new IP from IP pool
          schema:
            $ref: "#/definitions/allocatedIpPool"
        default:
          description: generic error response
          schema:
            $ref: "#/definitions/error"
definitions:
  allocatedIpPool:
    type: object
    properties:
      ipPoolId:
        type: integer
        format: int64
        readOnly: true
      allocatedIp:
        type: string
  app:
    type: object
    required:
      - name
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      name:
        type: string
      owner:
        type: string
      clusterName:
        type: string
      chartURL:
        type: string
      chartValues:
        type: string
      serviceFQDN:
        type: string
      status:
        type: string
  bareMetalHost:
    type: object
    allOf:
      - $ref: "#/definitions/baseResource"
    required:
      - ipMask
      - ip
    properties:
      ip:
        type: string
        format: ipv4
      ipMask:
        type: integer
        format: int8
  baseResource:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        format: uuid
        readOnly: true
      name:
        type: string
      owner:
        type: string
      kind:
        type: string
      createdAt:
        type: string
        format : date-time
      modifiedAt:
        type: string
        format : date-time
      revision:
        type: integer
        format: uint64
      labels:
        type: array
        items:
          $ref:  "#/definitions/label"
  cluster:
    type: object
    required:
      - name
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      greKey:
        type: integer
        format: int64
      nodeSize:
        type: string
        default: "xs"
      name:
        type: string
        minLength: 1
      # TODO(giri): make owner a required field once we have proper auth
      owner:
        type: string
        minLength: 1
      numNodes:
        type: integer
        minimum: 1
        maximum: 10
      nodeFailures:
        type: array
        items:
          type: string
      componentFailures:
        type: array
        items:
          type: string
      podFailures:
        type: array
        items:
          type: string
      status:
        type: string
  error:
    type: object
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
  ipPool:
    type: object
    properties:
      id:
        type: string
        readOnly: true
      cidr:
        type: string
      ipPoolRangeStart:
        type: string
      ipPoolRangeEnd:
        type: string
      reservedIPPools:
        type: array
        items:
          type: string
      labels:
        type: array
        items:
          type: object
          properties:
            key:
              type: string
            value:
              type: string
  label:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  network:
    type: object
    required:
      - name
    properties:
      id:
        type: integer
        format: int64
        readOnly: true
      name:
        type: string
      networkName:
        type: string
      networkCIDR:
        type: string
      gateway:
        type: string
      nameserver:
        type: string
      dhcp:
        type: string

