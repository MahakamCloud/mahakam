// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// GreNetwork gre network
// swagger:model GreNetwork
type GreNetwork struct {
	BaseResource

	// c ID r
	CIDR string `json:"CIDR,omitempty"`

	// g r e key
	GREKey int64 `json:"GREKey,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *GreNetwork) UnmarshalJSON(raw []byte) error {
	// AO0
	var aO0 BaseResource
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.BaseResource = aO0

	// now for regular properties
	var propsGreNetwork struct {
		CIDR string `json:"CIDR,omitempty"`

		GREKey int64 `json:"GREKey,omitempty"`
	}
	if err := swag.ReadJSON(raw, &propsGreNetwork); err != nil {
		return err
	}
	m.CIDR = propsGreNetwork.CIDR

	m.GREKey = propsGreNetwork.GREKey

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m GreNetwork) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	aO0, err := swag.WriteJSON(m.BaseResource)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	// now for regular properties
	var propsGreNetwork struct {
		CIDR string `json:"CIDR,omitempty"`

		GREKey int64 `json:"GREKey,omitempty"`
	}
	propsGreNetwork.CIDR = m.CIDR

	propsGreNetwork.GREKey = m.GREKey

	jsonDataPropsGreNetwork, errGreNetwork := swag.WriteJSON(propsGreNetwork)
	if errGreNetwork != nil {
		return nil, errGreNetwork
	}
	_parts = append(_parts, jsonDataPropsGreNetwork)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this gre network
func (m *GreNetwork) Validate(formats strfmt.Registry) error {
	var res []error

	// validation for a type composition with BaseResource
	if err := m.BaseResource.Validate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *GreNetwork) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GreNetwork) UnmarshalBinary(b []byte) error {
	var res GreNetwork
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
