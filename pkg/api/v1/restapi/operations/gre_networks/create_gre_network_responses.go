// Code generated by go-swagger; DO NOT EDIT.

package gre_networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/mahakamcloud/mahakam/pkg/api/v1/models"
)

// CreateGreNetworkCreatedCode is the HTTP code returned for type CreateGreNetworkCreated
const CreateGreNetworkCreatedCode int = 201

/*CreateGreNetworkCreated created GRE network

swagger:response createGreNetworkCreated
*/
type CreateGreNetworkCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Network `json:"body,omitempty"`
}

// NewCreateGreNetworkCreated creates CreateGreNetworkCreated with default headers values
func NewCreateGreNetworkCreated() *CreateGreNetworkCreated {

	return &CreateGreNetworkCreated{}
}

// WithPayload adds the payload to the create gre network created response
func (o *CreateGreNetworkCreated) WithPayload(payload *models.Network) *CreateGreNetworkCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create gre network created response
func (o *CreateGreNetworkCreated) SetPayload(payload *models.Network) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateGreNetworkCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateGreNetworkDefault error

swagger:response createGreNetworkDefault
*/
type CreateGreNetworkDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateGreNetworkDefault creates CreateGreNetworkDefault with default headers values
func NewCreateGreNetworkDefault(code int) *CreateGreNetworkDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateGreNetworkDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create gre network default response
func (o *CreateGreNetworkDefault) WithStatusCode(code int) *CreateGreNetworkDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create gre network default response
func (o *CreateGreNetworkDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create gre network default response
func (o *CreateGreNetworkDefault) WithPayload(payload *models.Error) *CreateGreNetworkDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create gre network default response
func (o *CreateGreNetworkDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateGreNetworkDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
