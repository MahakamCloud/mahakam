// Code generated by go-swagger; DO NOT EDIT.

package networks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/mahakamcloud/mahakam/pkg/api/v1/models"
)

// CreateIPPoolCreatedCode is the HTTP code returned for type CreateIPPoolCreated
const CreateIPPoolCreatedCode int = 201

/*CreateIPPoolCreated Created new ip pool

swagger:response createIpPoolCreated
*/
type CreateIPPoolCreated struct {

	/*
	  In: Body
	*/
	Payload *models.IPPool `json:"body,omitempty"`
}

// NewCreateIPPoolCreated creates CreateIPPoolCreated with default headers values
func NewCreateIPPoolCreated() *CreateIPPoolCreated {

	return &CreateIPPoolCreated{}
}

// WithPayload adds the payload to the create Ip pool created response
func (o *CreateIPPoolCreated) WithPayload(payload *models.IPPool) *CreateIPPoolCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create Ip pool created response
func (o *CreateIPPoolCreated) SetPayload(payload *models.IPPool) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateIPPoolCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateIPPoolDefault generic error response

swagger:response createIpPoolDefault
*/
type CreateIPPoolDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateIPPoolDefault creates CreateIPPoolDefault with default headers values
func NewCreateIPPoolDefault(code int) *CreateIPPoolDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateIPPoolDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create Ip pool default response
func (o *CreateIPPoolDefault) WithStatusCode(code int) *CreateIPPoolDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create Ip pool default response
func (o *CreateIPPoolDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create Ip pool default response
func (o *CreateIPPoolDefault) WithPayload(payload *models.Error) *CreateIPPoolDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create Ip pool default response
func (o *CreateIPPoolDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateIPPoolDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
